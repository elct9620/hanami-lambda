module Hanami
  module Lambda
    class Env
      @event: Hash[String, untyped]

      @headers: Hash[String, String]

      @context: Object

      def initialize: (event: Hash[String, untyped], headers: Hash[String, String], context: Object) -> void

      # Build a hash of the Rack environment
      #
      # @return [Hash] the hash of Rack environment
      #
      def to_h: () -> ::Hash[String, untyped]

      private

      def standardize_headers: (Hash[String, String]) -> Hash[String, String]
    end
  end
end
